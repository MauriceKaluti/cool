<?php
$url = 'https://sandbox.safaricom.co.ke/oauth/v1/generate?grant_type=client_credentials';

$curl = curl_init();
curl_setopt($curl, CURLOPT_URL, $url);
$credentials = base64_encode('YOUR_APP_CONSUMER_KEY:YOUR_APP_CONSUMER_SECRET');
curl_setopt($curl, CURLOPT_HTTPHEADER, array('Authorization: Basic '.$credentials)); //setting a custom header
curl_setopt($curl, CURLOPT_HEADER, true);
curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);

$curl_response = curl_exec($curl);

echo json_decode($curl_response);

?>
To make an API call, you will need to authenticate your app. We have provided an OAuth API for you to generate an access token, we support client_credentials grant type. To authorize your API call to the OAuth API, you will need a Basic Auth over HTTPS authorization token. The Basic Auth string is a base64 encoded string of your app’s client key and client secret. We have provided a means to obtain the Basic Auth string for your sandbox apps; while you are in the OAuth API’s sandbox. Click on ‘HTTP Basic Set Credentials’ button.

HTTP Basic Set Credentials

In the pop-up menu that appears, enter your consumer key and consumer secret. You have an option to save these credentials for 30 days and therefore, you do not need to set them every time you need an access token

Set Credentials Menu

The OAuth access token expires after an hour, after which, you will need to generate another access token. On a production app, use a base64 library of the programming language you are using to build your app to get the Basic Auth string that you will then use to invoke our OAuth API to get an access token.
HTTP Header Parameters
With an OAuth 2.0 Access Token, an application can now invoke our APIs by including the access token in the HTTP header. Our APIs currently only supports application/json content type.

Parameter	Description
Authorization	OAuth 2.0 Access Token. Bearer keyword followed by a space and the OAuth 2.0 Access Token. Bearer <Access-Token>
Content-Type	Only application/json content type is supported.
Security Credentials
<?php
$publicKey = "PATH_TO_CERTICATE_FILE";
$plaintext = "YOUR_PASSWORD";

openssl_public_encrypt($plaintext, $encrypted, $publicKey, OPENSSL_PKCS1_PADDING);

echo base64_encode($encrypted);

?>
M-Pesa Core authenticates a transaction by decrypting the security credentials. Security credentials are generated by encrypting the base64 encoded initiator password with M-Pesa’s public key, a X509 certificate.

The algorithm for generating security credentials is as follows:

Write the unencrypted password into a byte array.

Encrypt the array with the M-Pesa public key certificate. Use the RSA algorithm, and use PKCS #1.5 padding (not OAEP), and add the result to the encrypted stream.

Convert the resulting encrypted byte array into a string using base64 encoding. The resulting base64 encoded string is the security credential.

Command IDs
Command ID	Description
TransactionReversal	Reversal for an erroneous C2B transaction.
SalaryPayment	Used to send money from an employer to employees e.g. salaries
BusinessPayment	Used to send money from business to customer e.g. refunds
PromotionPayment	Used to send money when promotions take place e.g. raffle winners
AccountBalance	Used to check the balance in a paybill/buy goods account (includes utility, MMF, Merchant, Charges paid account).
CustomerPayBillOnline	Used to simulate a transaction taking place in the case of C2B Simulate Transaction or to initiate a transaction on behalf of the customer (STK Push).
TransactionStatusQuery	Used to query the details of a transaction.
CheckIdentity	Similar to STK push, uses M-Pesa PIN as a service.
BusinessPayBill	Sending funds from one paybill to another paybill
BusinessBuyGoods	sending funds from buy goods to another buy goods.
DisburseFundsToBusiness	Transfer of funds from utility to MMF account.
BusinessToBusinessTransfer	Transferring funds from one paybills MMF to another paybills MMF account.
BusinessTransferFromMMFToUtility	Transferring funds from paybills MMF to another paybills utility account.
Identifier Types
Identifier types - both sender and receiver - identify an M-Pesa transaction’s sending and receiving party as either a shortcode, a till number or a MSISDN (phone number). There are three identifier types that can be used with M-Pesa APIs.

Identifier	Identity
1	MSISDN
2	Till Number
4	Shortcode
M-Pesa Result and Response Codes
M-Pesa Result Codes
Result Code	Description
0	Success
1	Insufficient Funds
2	Less Than Minimum Transaction Value
3	More Than Maximum Transaction Value
4	Would Exceed Daily Transfer Limit
5	Would Exceed Minimum Balance
6	Unresolved Primary Party
7	Unresolved Receiver Party
8	Would Exceed Maxiumum Balance
11	Debit Account Invalid
12	Credit Account Invaliud
13	Unresolved Debit Account
14	Unresolved Credit Account
15	Duplicate Detected
17	Internal Failure
20	Unresolved Initiator
26	Traffic blocking condition in place
M-Pesa Response Codes (from client back to gateway)
Response codes are sent from the clients endpoints back to the gateway. This is done to acknowledge that the client has received the results.

Result Code	Description
0	Success (for C2B)
00000000	Success (For APIs that are not C2B)
1 or any other number	Rejecting the transaction
Test Credentials
To facilitate testing of sandbox apps, we have provided test credentials consisting of:

Test Shortcodes
Initiator Name
Security Credential
Test MSISDN
Lipa Na M-Pesa Online Shortcode
Lipa Na M-Pesa Online Passkey
There are two shortcodes in the test credentials page - Shortcode 1 and Shortcode 2. The initiator name and security credentials are associated with Shortcode 1. For M-Pesa APIs that have ‘PartyA’ in their request parameters, use Shortcode 1; Shortcode 2 will be used for ‘PartyB’.

The test credentials page has a utility to generate an M-Pesa security credential. You use the utility by entering the string alongside ‘Security Credential’ with no preceding and trailing spaces and then clicking on ‘Generate Credentials’ button. You will then get an M-Pesa security credential for use in invoking an API that requires a security credential in its request parameters.

The ‘Lipa Na M-Pesa Online Shortcode’ is a production shortcode. On the sandbox, API calls using Lipa Na M-Pesa Online Payment API can only be made to this shortcode and money will be transacted. Auto-reversal of funds received on this shortcode will be done every night at 23:59 HRS EAT (midnight).

The ‘Lipa Na M-Pesa Online Passkey’ is used to create a password for use when making a Lipa Na M-Pesa Online Payment API call. The password is generated by base64 encoding the passkey, shortcode and timestamp, the resultant string from this encoding is the password.

Test credentials expire after three days, after which you will be issued with fresh test credentials. Lipa Na M-Pesa Online Shortcode and Lipa Na M-Pesa Passkey do not expire.

Test Cases
The developer will download test cases when they are creating a sandbox app. The test cases are in an Excel spreadsheet which the developer will fill with results from the API calls they make for each test scenarios.

Once the test case scenarios have been duly filled, the developer will upload the filled Excel spreadsheet during the ‘Go Live’ process. Our support team will then review the test cases and then either approve or reject the production app.

Test cases are meant to ensure that the developer understands the structure of requests and responses of an API. The support team will approve or reject a production app based on the uploaded test cases. The developer does not need to fill all test case scenarios, only scenarios for the API they intend to consume.
Going Live
Having played with the APIs on the sandbox and filled the test cases for an API(s) that you would like to move into production with, the developer will initiate the ‘Go Live’ process.

To go live with an M-Pesa API, the developer will need to prove ownership or authorization to use an M-Pesa shortcode. M-Pesa Shortcodes are managed on the M-Pesa Web Portal where owners of the shortcodes can add users and assign roles. When a request to verify ownership or authorization to use an M-Pesa shortcode is received, an OTP - one time password - is sent to the user with a Business Manager and Business Administrator role and a notification is sent to users with a Business Manager role.

For non M-Pesa APIs, the developer will provide a valid identification document known to Safaricom for example a National ID or passport used to register as a Safaricom subscriber.

Step by Step Go Live Guide
1. Upload test cases

From the menu bar, click on ‘Go Live’

go live

Upload a filled out test cases (Excel spreadsheet) and click ‘Upload’, once uploaded click on the check box as consent to the ‘Terms and Conditions’. Click on ‘Next’.

upload test cases

2. Select a verification type

Verification can be by a ‘Shortcode’ or a ‘Document ID’.

verification

To verify an M-Pesa Shortcode - input your ‘organisation short code’, ‘organisation name’ and ‘M-Pesa User Name’.

The ‘M-Pesa User Name’ is user name used on the M-Pesa Web Portal for the Business Administrator or Business Manager or Business Operator roles within the organisation in M-Pesa.

verification_shortcode

To verify a ‘Document ID’, select a ‘Document Type’, input the ‘Document ID’ and ‘Organisation Name’.

The ‘Document Type’ used are any document submitted to Safaricom while subscribing to any Safaricom services, for example, registering for an M-Pesa account or Safaricom MSISDN.

This verification type is for non M-Pesa APIs.

verification_document_type

Click ‘Verify’

3. OTP Confirmation

During the verification stage you will be required to receive an OTP so as to verify you are the owner of the paybill.

This requires you to set the password on the M-Pesa portal. The steps are as below:

a) Login as a business administrator.

b) Click on operators on the left hand corner on the M-Pesa portal and click on search. This will show you all your operators.

c) You will find business administrators and business operators. Find the user which you are going to use on the portal and click edit.

d) Click on KYC Info and edit the following information as shown below

OTP

Ensure the MSISDN is entered in format 2547XXXXXXXX
e) Click submit and save the changes

You then Continue the rest of the process on daraja portal.

A verification will be done and a six digit passcode, OTP - one time password, will be sent via SMS to the MSISDN that you have entered above.

If the verification type was an M-Pesa Shortcode, the OTP will be sent to MSISDN belonging to the M-Pesa Business Administrator or Manager or Operator. An SMS notification will also be sent to other users within the M-Pesa organisation notifying them of the intention to integrate their shortcode to M-Pesa APIs.

If verification type was a Document ID, the OTP will be sent to the MSISDN associated with the document.(not applicable for M-Pesa APIs)

otp_confirmation

The OTP will expire after three minutes. If an OTP is not submitted for confirmation within three minutes you can request a new OTP by clicking ‘Resend OTP’. All OTPs will be sent via SMS. The M- Pesa Business Manager or Business Operator will need to log on to the M-Pesa Web portal and update their profiles with their current MSISDNs.
The developer will select the API Products they will be integrating to, select only the API Products for which you have filled test case scenarios for in the filled test cases Excel spreadsheet uploaded at step 1. The API Products will be presented depending on the verification type used. For M-Pesa shortcode verification type, the API products displayed will depend on the M-Pesa product type configured on M-Pesa for that shortcode.

For ‘Document ID’ verification method, non M-Pesa API Products will be displayed.

Click ‘Submit’ once you have selected the API Product(s) and input the OTP.

4. Production URLs and Credentials

Your application to ‘Go Live’ will be reviewed for approval by our support teams. The approval process involves a review of the uploaded test cases ensuring that all test scenarios were successfully tested and the actual results filled for the test scenarios are appropriate.

production

To switch to your production app page, click on the switch adjacent to your email address and select the organisation name you submitted earlier during the verification process. Your production app will be automatically be assigned a name and will have a ‘pending’ tag.

Once your production app is approved, you will receive an email notification of the production urls for the APIs in the approved API Products. The production app will be tagged ‘approved’ and its consumer key and consumer secret can now be used.

5. Setting the Security credential (for B2C, B2B, Transaction Status, Reversal, Account Balance APIs)

The last step is setting the secruity credential tag. (This does not apply to Lipa Na Mpesa Online and C2B API’s) Security credential allows us as M-Pesa to authenticate that the request has been generated by a particular paybill owner.

After your app is approved you will receive an email from no_reply@m-pesa.com with the api password as follows:

“Your M-PESA user account has been created. Your operator id is null and your user name is testapi. Your PIN is null and your password is null.”

The following are the steps that are to be followed when setting the security credential:

a. The first step is ensuring that the web Operator has the correct role (Set Restricted ORG API PASSWORD). The web operator with the correct role logs in and clicks Search, then clicks Operator. The operator should then enter the API Username in the Username field and Click Search.

b. When the Operator details are displayed, click the icon in the Operation column.

M-Pesa Portal1

c. The API Operator details will be displayed. Click the Set Password button.

M-Pesa Portal1

d. Enter the preferred password. (Must contain a capital letter, small letter, number and special character)

M-Pesa Portal1

Inviting Developers
Once you have an approved production app, you can now invite other developers to help you to develop your app. You can only invite developers who also have developer accounts on Daraja.

To invite a developer(s):

1. Switch to your production profile by clicking the switch to your right adjacent to your email address.

2. From the drop down menu that appears, click on ‘Manage Companies’.

3. The ‘Manage Companies’ page will open. The page will have a list of companies that you have created or have been invited to.

For companies you have created, your role will be ‘Owner’ and ‘Monetization Administrator’. You can invite developers to your company by providing the email address they used in registering for a developer account. They will then get an email with an invitation link and join your company by consenting to the invitation.

Once a developer has been invited to your company, they will have a ‘Developer’ role by default. You can give a developer ‘Company Administrator’ role. A developer with the ‘Company Administrator’ role can invite other developers, assign and revoke roles to other developers and remove developers.

If you have been invited to a company, you have access to the production apps of that company. You can then make API calls using the consumer key and consumer secret of any production app associated with the company you have been invited to.

Only the owner of a company can edit or delete a production app(s) of their company. Invited developers, even those with a ‘Company Administrator’ role, cannot edit or delete a production app(s).

M-Pesa APIs
The following are the M-Pesa APIs that are available to test. This documentation provides sample codes and JSON responses to the right with these APIs.

A Postman collection of these APIs are also available.

Run in Postman

B2C API
<?php
$url = 'https://sandbox.safaricom.co.ke/mpesa/b2c/v1/paymentrequest';

$curl = curl_init();
curl_setopt($curl, CURLOPT_URL, $url);
curl_setopt($curl, CURLOPT_HTTPHEADER, array('Content-Type:application/json','Authorization:Bearer ACCESS_TOKEN')); //setting custom header


$curl_post_data = array(
  //Fill in the request parameters with valid values
  'InitiatorName' => ' ',
  'SecurityCredential' => ' ',
  'CommandID' => ' ',
  'Amount' => ' ',
  'PartyA' => ' ',
  'PartyB' => ' ',
  'Remarks' => ' ',
  'QueueTimeOutURL' => 'http://your_timeout_url',
  'ResultURL' => 'http://your_result_url',
  'Occasion' => ' '
);

$data_string = json_encode($curl_post_data);

curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
curl_setopt($curl, CURLOPT_POST, true);
curl_setopt($curl, CURLOPT_POSTFIELDS, $data_string);

$curl_response = curl_exec($curl);
print_r($curl_response);

echo $curl_response;
?>
This API enables Business to Customer (B2C) transactions between a company and customers who are the end-users of its products or services. Use of this API requires a valid and verified B2C M-Pesa Short code.

B2C Resource URL
POST https://sandbox.safaricom.co.ke/mpesa/b2c/v1/paymentrequest

B2C Query Parameters
Parameter	Description
InitiatorName	This is the credential/username used to authenticate the transaction request.
SecurityCredential	Base64 encoded string of the Security Credential, which is encrypted using M-Pesa public key and validates the transaction on M-Pesa Core system.
CommandID	Unique command for each transaction type e.g. SalaryPayment, BusinessPayment, PromotionPayment
Amount	The amount being transacted
PartyA	Organization’s shortcode initiating the transaction.
PartyB	Phone number receiving the transaction
Remarks	Comments that are sent along with the transaction.
QueueTimeOutURL	The timeout end-point that receives a timeout response.
ResultURL	The end-point that receives the response of the transaction
Occasion	Optional
B2B API
<?php
$url = 'https://sandbox.safaricom.co.ke/mpesa/b2b/v1/paymentrequest';

$curl = curl_init();
curl_setopt($curl, CURLOPT_URL, $url);
curl_setopt($curl, CURLOPT_HTTPHEADER, array('Content-Type:application/json','Authorization:Bearer ACCESS_TOKEN')); //setting custom header


$curl_post_data = array(
  //Fill in the request parameters with valid values
  'Initiator' => ' ',
  'SecurityCredential' => ' ',
  'CommandID' => ' ',
  'SenderIdentifierType' => ' ',
  'RecieverIdentifierType' => ' ',
  'Amount' => ' ',
  'PartyA' => ' ',
  'PartyB' => ' ',
  'AccountReference' => ' ',
  'Remarks' => ' ',
  'QueueTimeOutURL' => 'http://your_timeout_url',
  'ResultURL' => 'http://your_result_url'
);

$data_string = json_encode($curl_post_data);

curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
curl_setopt($curl, CURLOPT_POST, true);
curl_setopt($curl, CURLOPT_POSTFIELDS, $data_string);

$curl_response = curl_exec($curl);
print_r($curl_response);

echo $curl_response;
?>
This API enables Business to Business (B2B) transactions between a business and another business. Use of this API requires a valid and verified B2B M-Pesa short code for the business initiating the transaction and the both businesses involved in the transaction.

B2B - Resource URL
POST https://sandbox.safaricom.co.ke/mpesa/b2b/v1/paymentrequest

B2B - Request Parameters
Parameter	Description
Initiator	This is the credential/username used to authenticate the transaction request.
SecurityCredential	Base64 encoded string of the Security Credential, which is encrypted using M-Pesa public key and validates the transaction on M-Pesa Core system.
CommandID	Unique command for each transaction type, possible values are: BusinessPayBill, MerchantToMerchantTransfer, MerchantTransferFromMerchantToWorking, MerchantServicesMMFAccountTransfer, AgencyFloatAdvance
Amount	The amount being transacted.
PartyA	Organization’s short code initiating the transaction.
SenderIdentifier	Type of organization sending the transaction.
PartyB	Organization’s short code receiving the funds being transacted.
RecieverIdentifierType	Type of organization receiving the funds being transacted.
Remarks	Comments that are sent along with the transaction.
QueueTimeOutURL	The path that stores information of time out transactions.it should be properly validated to make sure that it contains the port, URI and domain name or publicly available IP.
ResultURL	The path that receives results from M-Pesa it should be properly validated to make sure that it contains the port, URI and domain name or publicly available IP.
AccountReference	Account Reference mandatory for “BusinessPaybill” CommandID.
B2B Response Parameters
Parameter	Description
ConversationID	A unique numeric code generated by the M-Pesa system of the response to a request.
OriginatorConversationID	A unique numeric code generated by the M-Pesa system of the request.
ResponseDescription	A response message from the M-Pesa system accompanying the response to a request.
C2B API
This API enables Paybill and Buy Goods merchants to integrate to M-Pesa and receive real time payments notifications.

Register URL
<?php
$url = 'https://sandbox.safaricom.co.ke/mpesa/c2b/v1/registerurl';

$curl = curl_init();
curl_setopt($curl, CURLOPT_URL, $url);
curl_setopt($curl, CURLOPT_HTTPHEADER, array('Content-Type:application/json','Authorization:Bearer ACCESS_TOKEN')); //setting custom header


$curl_post_data = array(
  //Fill in the request parameters with valid values
  'ShortCode' => ' ',
  'ResponseType' => ' ',
  'ConfirmationURL' => 'http://ip_address:port/confirmation',
  'ValidationURL' => 'http://ip_address:port/validation_url'
);

$data_string = json_encode($curl_post_data);

curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
curl_setopt($curl, CURLOPT_POST, true);
curl_setopt($curl, CURLOPT_POSTFIELDS, $data_string);

$curl_response = curl_exec($curl);
print_r($curl_response);

echo $curl_response;
?>
The C2B Register URL API registers the 3rd party’s confirmation and validation URLs to M-Pesa ; which then maps these URLs to the 3rd party shortcode. Whenever M-Pesa receives a transaction on the shortcode, M-Pesa triggers a validation request against the validation URL and the 3rd party system responds to M-Pesa with a validation response (either a success or an error code). The response expected is the success code the 3rd party

M-Pesa completes or cancels the transaction depending on the validation response it receives from the 3rd party system. A confirmation request of the transaction is then sent by M-Pesa through the confirmation URL back to the 3rd party which then should respond with a success acknowledging the confirmation.

The 3rd party resource URLs for both confirmation and validation must be HTTPS in production. Validation is an optional feature that needs to be activated on M-Pesa, the owner of the shortcode needs to make this request for activation.
C2B Register URL - Resource URL
POST https://sandbox.safaricom.co.ke/mpesa/c2b/v1/registerurl

C2B Register URL - Request Parameters
Parameter	Description
ValidationURL	Validation URL for the client.
ConfirmationURL	Confirmation URL for the client.
ResponseType	Default response type for timeout.
ShortCode	The short code of the organization.
Register URL - Response Parameters
Parameter	Description
ConversationID	A unique numeric code generated by the M-Pesa system of the response to a request.
OriginatorConversationID	A unique numeric code generated by the M-Pesa system of the request.
ResponseDescription	A response message from the M-Pesa system accompanying the response to a request.
C2B Simulate Transaction
<?php
$url = 'https://sandbox.safaricom.co.ke/mpesa/c2b/v1/simulate';

  $curl = curl_init();
  curl_setopt($curl, CURLOPT_URL, $url);
  curl_setopt($curl, CURLOPT_HTTPHEADER, array('Content-Type:application/json','Authorization:Bearer ACCESS_TOKEN')); //setting custom header


  $curl_post_data = array(
          //Fill in the request parameters with valid values
         'ShortCode' => ' ',
         'CommandID' => 'CustomerPayBillOnline',
         'Amount' => ' ',
         'Msisdn' => ' ',
         'BillRefNumber' => '00000'
  );

  $data_string = json_encode($curl_post_data);

  curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
  curl_setopt($curl, CURLOPT_POST, true);
  curl_setopt($curl, CURLOPT_POSTFIELDS, $data_string);

  $curl_response = curl_exec($curl);
  print_r($curl_response);

  echo $curl_response;
?>
C2B Simulate Transaction - Resource URL
POST https://sandbox.safaricom.co.ke/mpesa/c2b/v1/simulate

C2B Simulate Transaction - Request Parameters
Parameter	Description
CommandID	Unique command for each transaction type.
Amount	The amount been transacted.
MSISDN	MSISDN (phone number) sending the transaction, start with country code without the plus(+) sign.
BillRefNumber	Bill Reference Number (Optional).
ShortCode	6 digit M-Pesa Till Number or PayBill Number
C2B Simulate Transaction - Response Parameters
Parameter	Description
ConversationID	A unique numeric code generated by the M-Pesa system of the response to a request.
OriginatorConversationID	A unique numeric code generated by the M-Pesa system of the request.
ResponseDescription	A response message from the M-Pesa system accompanying the response to a request.
Account Balance API
<?php
$url = 'https://sandbox.safaricom.co.ke/mpesa/accountbalance/v1/query';

$curl = curl_init();
curl_setopt($curl, CURLOPT_URL, $url);
curl_setopt($curl, CURLOPT_HTTPHEADER, array('Content-Type:application/json','Authorization:Bearer ACCESS_TOKEN')); //setting custom header


$curl_post_data = array(
  //Fill in the request parameters with valid values
  'CommandID' => ' ',
  'Initiator' => ' ',
  'SecurityCredential' => ' ',
  'CommandID' => 'AccountBalance',
  'PartyA' => ' ',
  'IdentifierType' => '4',
  'Remarks' => ' ',
  'QueueTimeOutURL' => 'https://ip_address:port/timeout_url',
  'ResultURL' => 'https://ip_address:port/result_url'
);

$data_string = json_encode($curl_post_data);

curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
curl_setopt($curl, CURLOPT_POST, true);
curl_setopt($curl, CURLOPT_POSTFIELDS, $data_string);

$curl_response = curl_exec($curl);
print_r($curl_response);

echo $curl_response;
?>
The Account Balance API requests for the account balance of a shortcode.

Account Balance - Resource URL
POST https://sandbox.safaricom.co.ke/mpesa/accountbalance/v1/query

Account Balance - Request Parameters
Parameter	Description
Initiator	This is the credential/username used to authenticate the transaction request.
SecurityCredential	Base64 encoded string of the Security Credential, which is encrypted using M-Pesa public key and validates the transaction on M-Pesa Core system.
CommandID	A unique command passed to the M-Pesa system.
PartyB	The shortcode of the organisation receiving the transaction.
ReceiverIdentifierType	Type of the organisation receiving the transaction.
Remarks	Comments that are sent along with the transaction.
QueueTimeOutURL	The timeout end-point that receives a timeout message.
ResultURL	The end-point that receives a successful transaction.
AccountType	Organisation receiving the funds.
Transaction Status
<?php
$url = 'https://sandbox.safaricom.co.ke/mpesa/transactionstatus/v1/query';

$curl = curl_init();
curl_setopt($curl, CURLOPT_URL, $url);
curl_setopt($curl, CURLOPT_HTTPHEADER, array('Content-Type:application/json','Authorization:Bearer ACCESS_TOKEN')); //setting custom header


$curl_post_data = array(
  //Fill in the request parameters with valid values
  'Initiator' => ' ',
  'SecurityCredential' => ' ',
  'CommandID' => 'TransactionStatusQuery',
  'TransactionID' => ' ',
  'PartyA' => ' ',
  'IdentifierType' => '1',
  'ResultURL' => 'https://ip_address:port/result_url',
  'QueueTimeOutURL' => 'https://ip_address:port/timeout_url',
  'Remarks' => ' ',
  'Occasion' => ' '
);

$data_string = json_encode($curl_post_data);

curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
curl_setopt($curl, CURLOPT_POST, true);
curl_setopt($curl, CURLOPT_POSTFIELDS, $data_string);

$curl_response = curl_exec($curl);
print_r($curl_response);

echo $curl_response;
?>
Transaction Status API checks the status of a B2B, B2C and C2B APIs transactions.

Transaction Status Resource URL
POST https://sandbox.safaricom.co.ke/mpesa/transactionstatus/v1/query

Transaction Status Request Parameters
Parameter	Description
CommandID	Unique command for each transaction type, possible values are: TransactionStatusQuery.
ShortCode	Organization /MSISDN sending the transaction.
IdentifierType	Type of organization receiving the transaction
Remarks	Comments that are sent along with the transaction.
Initiator	The name of Initiator to initiating the request.
SecurityCredential	Base64 encoded string of the Security Credential, which is encrypted using M-Pesa public key and validates the transaction on M-Pesa Core system.
QueueTimeOutURL	The path that stores information of time out transaction.
ResultURL	The path that stores information of transaction.
TransactionID	Organization Receiving the funds.
Occasion	Optional.
Reversal
<?php
$url = 'https://sandbox.safaricom.co.ke/mpesa/reversal/v1/request';

$curl = curl_init();
curl_setopt($curl, CURLOPT_URL, $url);
curl_setopt($curl, CURLOPT_HTTPHEADER, array('Content-Type:application/json','Authorization:Bearer ACCESS_TOKEN')); //setting custom header


$curl_post_data = array(
  //Fill in the request parameters with valid values
  'CommandID' => ' ',
  'Initiator' => ' ',
  'SecurityCredential' => ' ',
  'CommandID' => 'TransactionReversal',
  'TransactionID' => ' ',
  'Amount' => ' ',
  'ReceiverParty' => ' ',
  'RecieverIdentifierType' => '4',
  'ResultURL' => 'https://ip_address:port/result_url',
  'QueueTimeOutURL' => 'https://ip_address:port/timeout_url',
  'Remarks' => ' ',
  'Occasion' => ' '
);

$data_string = json_encode($curl_post_data);

curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
curl_setopt($curl, CURLOPT_POST, true);
curl_setopt($curl, CURLOPT_POSTFIELDS, $data_string);

$curl_response = curl_exec($curl);
print_r($curl_response);

echo $curl_response;
?>
Reverses a B2B, B2C or C2B M-Pesa transaction.

Reversal Resource URL
POST https://sandbox.safaricom.co.ke/mpesa/reversal/v1/request

Reversal Request Parameters
Parameter	Description
Initiator	This is the credential/username used to authenticate the transaction request.
SecurityCredential	Base64 encoded string of the Security Credential, which is encrypted using M-Pesa public key and validates the transaction on M-Pesa Core system.
CommandID	Unique command for each transaction type, possible values are: TransactionReversal.
PartyA	Organization/MSISDN sending the transaction.
RecieverIdentifierType	Type of organization receiving the transaction.
Remarks	Comments that are sent along with the transaction.
QueueTimeOutURL	The path that stores information of time out transaction.
ResultURL	The path that stores information of transaction.
TransactionID	Organization Receiving the funds.
Occasion	Optional.
Lipa na M-Pesa Online Payment
<?php
$url = 'https://sandbox.safaricom.co.ke/mpesa/stkpush/v1/processrequest';

$curl = curl_init();
curl_setopt($curl, CURLOPT_URL, $url);
curl_setopt($curl, CURLOPT_HTTPHEADER, array('Content-Type:application/json','Authorization:Bearer ACCESS_TOKEN')); //setting custom header


$curl_post_data = array(
  //Fill in the request parameters with valid values
  'BusinessShortCode' => ' ',
  'Password' => ' ',
  'Timestamp' => ' ',
  'TransactionType' => 'CustomerPayBillOnline',
  'Amount"' => ' ',
  'PartyA' => ' ',
  'PartyB' => ' ',
  'PhoneNumber' => ' ',
  'CallBackURL' => 'https://ip_address:port/callback',
  'AccountReference' => ' ',
  'TransactionDesc' => ' '
);

$data_string = json_encode($curl_post_data);

curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
curl_setopt($curl, CURLOPT_POST, true);
curl_setopt($curl, CURLOPT_POSTFIELDS, $data_string);

$curl_response = curl_exec($curl);
print_r($curl_response);

echo $curl_response;
?>
Lipa na M-Pesa Online Payment API is used to initiate a M-Pesa transaction on behalf of a customer using STK Push. This is the same technique mySafaricom App uses whenever the app is used to make payments.

Lipa na M-Pesa Online Payment - Resource URL
POST https://sandbox.safaricom.co.ke/mpesa/stkpush/v1/processrequest

Lipa na M-Pesa Online Payment - Request Parameters
Parameter	Description
BusinessShortCode	The organization shortcode used to receive the transaction.
Password	The password for encrypting the request. This is generated by base64 encoding BusinessShortcode, Passkey and Timestamp.
Timestamp	The timestamp of the transaction in the format yyyymmddhhiiss.
TransactionType	The transaction type to be used for this request. Only CustomerPayBillOnline is supported.
Amount	The amount to be transacted.
PartyA	The MSISDN sending the funds.
PartyB	The organization shortcode receiving the funds
PhoneNumber	The MSISDN sending the funds.
CallBackURL	The url to where responses from M-Pesa will be sent to.
AccountReference	Used with M-Pesa PayBills.
TransactionDesc	A description of the transaction.
Lipa na M-Pesa Online Payment - Response Parameters
Parameter	Description
MerchantRequestID	Merchant Request ID
CheckoutRequestID	Check out Request ID
ResponseCode	Response Code
ResultDesc	Result Desc
ResponseDescription	Response Description message
ResultCode	Result Code
Lipa na M-Pesa Online Query Request
<?php
$url = 'https://sandbox.safaricom.co.ke/mpesa/stkpushquery/v1/query';

$curl = curl_init();
curl_setopt($curl, CURLOPT_URL, $url);
curl_setopt($curl, CURLOPT_HTTPHEADER, array('Content-Type:application/json','Authorization:Bearer ACCESS_TOKEN')); //setting custom header


$curl_post_data = array(
  //Fill in the request parameters with valid values
  'BusinessShortCode' => ' ',
  'Password' => ' ',
  'Timestamp' => ' ',
  'CheckoutRequestID' => ' '
);

$data_string = json_encode($curl_post_data);

curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
curl_setopt($curl, CURLOPT_POST, true);
curl_setopt($curl, CURLOPT_POSTFIELDS, $data_string);

$curl_response = curl_exec($curl);
print_r($curl_response);

echo $curl_response;
?>
Lipa na M-Pesa Online Query Request - Resource URL
POST https://sandbox.safaricom.co.ke/mpesa/stkpushquery/v1/query



Lipa na M-Pesa Online Query Request - Request Parameters
Parameter	Description
BusinessShortCode	Business Short Code
Password	Password
Timestamp	Timestamp
CheckoutRequestID	Checkout RequestID
Lipa na M-Pesa Online Query Request - Response Parameters
Parameter	Description
MerchantRequestID	Merchant Request ID
CheckoutRequestID	Check out Request ID
ResponseCode	Response Code
ResultDesc	Result Desc
ResponseDescription	Response Description message
ResultCode	Result Code
Errors
Safaricom APIs are built to comply with HTTP Status codes. The following are error codes that will be returned whenever there are errors in a request. Server errors are rare but do occur whenever there are connectivity issues.

Error Code	Meaning
400	Bad Request
401	Unauthorized
403	Forbidden
404	Not Found
405	Method Not Allowed
406	Not Acceptable – You requested a format that isn’t json
429	Too Many Requests – You’re requesting too many kittens! Slow down!
500	Internal Server Error – We had a problem with our server. Try again later.
503	Service Unavailable – We’re temporarily offline for maintenance. Please try again later.
Creating a HTTP Server Listener
<?php


    $postData = file_get_contents('php://input');
    //perform your processing here, e.g. log to file....
    $file = fopen("log.txt", "w"); //url fopen should be allowed for this to occur
    if(fwrite($file, $postData) === FALSE)
    {
        fwrite("Error: no data written");
    }

    fwrite("\r\n");
    fclose($file);

    echo '{"ResultCode": 0, "ResultDesc": "The service was accepted successfully", "ThirdPartyTransID": "1234567890"}';
?>